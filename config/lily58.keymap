/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <0>;
};

/ {
    behaviors {
        tap_layer_2: tap_layer_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_LAYER_2";
            #binding-cells = <0>;
            bindings = <&sl 2>, <&tog 2>;
        };

        tap_layer_1: tap_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_LAYER_1";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&tog 1>;
        };

        tap_dance_tab: tap_dance_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_TAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp RA(TAB)>;
        };

        td_escape: td_escape {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESCAPE>;
        };

        td_z: td_z {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Z";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp Z>;
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mods for left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <48 49 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57 40 39 38>;
        };

        hm_right: hm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mods for right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&td_escape    &kp N1       &kp N2          &kp N3          &kp N4            &kp N5                                &kp N6           &kp N7                   &kp N8                 &kp N9                 &kp N0                             &kp DELETE
&kp TAB       &kp Q        &kp W           &kp E           &kp R             &kp T                                 &kp Y            &kp U                    &kp I                  &kp O                  &kp P                              &kp BACKSLASH
&kp CAPSLOCK  &hm LCTRL A  &hm LEFT_GUI S  &hm LEFT_ALT D  &hm LEFT_SHIFT F  &kp G                                 &kp H            &hm_right RIGHT_SHIFT J  &hm_right RIGHT_ALT K  &hm_right RIGHT_GUI L  &hm_right RIGHT_CONTROL SEMICOLON  &kp SQT
&mo 3         &kp Z        &td_z           &kp C           &kp V             &kp B         &kp LBKT     &kp RBKT   &kp N            &kp M                    &kp COMMA              &kp DOT                &kp FSLH                           &kp EQUAL
                                           &tog 0          &trans            &lt 1 ESCAPE  &kp ENTER    &kp SPACE  &lt 2 BACKSPACE  &kp MINUS                &tog 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numbers {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                                                       &kp F7         &kp F8        &kp F9        &kp F10       &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                                                       &kp STAR       &kp N7        &kp N8        &kp N9        &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                       &kp KP_DIVIDE  &kp NUMBER_4  &kp N5        &kp N6        &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans        &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp CARET      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER  &trans
                        &trans  &trans  &tap_layer_1  &trans                  &kp N0                 &kp PERIOD     &trans        &tog 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_symbols {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                          &trans    &trans    &trans         &trans     &trans  &trans
&trans  &trans  &trans          &mmv MOVE_UP    &trans           &trans                          &trans    &kp HOME  &kp PAGE_UP    &trans     &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                          &kp LEFT  &kp DOWN  &kp UP_ARROW   &kp RIGHT  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans  &mkp LCLK    &mkp RCLK  &trans    &kp END   &kp PAGE_DOWN  &trans     &trans  &trans
                                &trans          &trans           &trans  &trans       &trans     &trans    &trans    &tog 0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        bt_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans        &tog 0
            >;
        };
    };
};
